From d04a31cf48288c6bd047c381d7c694e1175c99f7 Mon Sep 17 00:00:00 2001
From: Martin Stransky <stransky@redhat.com>
Date: Mon, 27 Mar 2017 17:01:37 +0900
Subject: [PATCH 10/44] Fixed CurrentX11TimeGetter usage, fixed
 WindowSurfaceWayland removal

Signed-off-by: Hiroshi Hatake <hatake@clear-code.com>

This commit is adopted for ESR52 branch.
---
 widget/gtk/WindowSurfaceWayland.cpp |  8 +++++++-
 widget/gtk/nsWindow.cpp             | 22 +++++++++++-----------
 2 files changed, 18 insertions(+), 12 deletions(-)

diff --git a/widget/gtk/WindowSurfaceWayland.cpp b/widget/gtk/WindowSurfaceWayland.cpp
index 3605a2a166fd..dab84b8349bb 100644
--- a/widget/gtk/WindowSurfaceWayland.cpp
+++ b/widget/gtk/WindowSurfaceWayland.cpp
@@ -31,6 +31,7 @@ GDK_WINDOWING_X11 - remove
 - how big is rectangle owerlap in BackBufferWayland::CopyRectangle()?
 (firefox:15155): Gdk-WARNING **: Tried to map a popup with a non-top most parent
   - it was ok in X11
+- try to draw (first commit) when vblank comes like Gtk does, not when gecko calls it
 */
 #include <assert.h>
 #include <poll.h>
@@ -443,7 +444,12 @@ WindowSurfaceWayland::WindowSurfaceWayland(nsWindow *aWidget,
 
 WindowSurfaceWayland::~WindowSurfaceWayland()
 {
-  // TODO - free registry, buffers etc.
+  delete mFrontBuffer;
+  delete mBackBuffer;
+
+  if (mFrameCallback) {
+    wl_callback_destroy(mFrameCallback);
+  }
 }
 
 BackBufferWayland*
diff --git a/widget/gtk/nsWindow.cpp b/widget/gtk/nsWindow.cpp
index bc029d7d903b..14b66794d6ce 100644
--- a/widget/gtk/nsWindow.cpp
+++ b/widget/gtk/nsWindow.cpp
@@ -308,14 +308,11 @@ public:
 
     guint32 GetCurrentTime() const
     {
-        //return gdk_x11_get_server_time(mWindow);
-        return g_get_monotonic_time()/1000;
+        return gdk_x11_get_server_time(mWindow);
     }
 
     void GetTimeAsyncForPossibleBackwardsSkew(const TimeStamp& aNow)
     {
-        return; // TODO
-
         // Check for in-flight request
         if (!mAsyncUpdateStart.IsNull()) {
             return;
@@ -334,8 +331,6 @@ public:
     gboolean PropertyNotifyHandler(GtkWidget* aWidget,
                                    GdkEventProperty* aEvent)
     {
-        return FALSE;
-
         if (aEvent->atom !=
             gdk_x11_xatom_to_atom(TimeStampPropAtom())) {
             return FALSE;
@@ -3087,11 +3082,16 @@ nsWindow::GetEventTimeStamp(guint32 aEventTime)
         // In this case too, just return the current timestamp.
         return TimeStamp::Now();
     }
-    CurrentX11TimeGetter* getCurrentTime = GetCurrentTimeGetter();
-    MOZ_ASSERT(getCurrentTime,
-               "Null current time getter despite having a window");
-    return TimeConverter().GetTimeStampFromSystemTime(aEventTime,
-                                                      *getCurrentTime);
+    if (!mIsX11Display) {
+        // Wayland uses CLOCK_MONOTONIC for event timestamp on Linux
+        return TimeStamp::Now();
+    } else {
+        CurrentX11TimeGetter* getCurrentTime = GetCurrentTimeGetter();
+        MOZ_ASSERT(getCurrentTime,
+                   "Null current time getter despite having a window");
+        return TimeConverter().GetTimeStampFromSystemTime(aEventTime,
+                                                          *getCurrentTime);
+    }
 }
 
 mozilla::CurrentX11TimeGetter*
-- 
2.11.0

