From a443bd6dd6014a3aa0838df07db0a615db94c979 Mon Sep 17 00:00:00 2001
From: Martin Stransky <stransky@redhat.com>
Date: Tue, 21 Mar 2017 11:42:21 +0900
Subject: [PATCH 04/44] Removed debug Dump() code

Signed-off-by: Hiroshi Hatake <cosmo0920.oucc@gmail.com>
---
 widget/gtk/WindowSurfaceWayland.cpp | 80 -------------------------------------
 widget/gtk/WindowSurfaceWayland.h   |  4 --
 2 files changed, 84 deletions(-)

diff --git a/widget/gtk/WindowSurfaceWayland.cpp b/widget/gtk/WindowSurfaceWayland.cpp
index 7fab07cfc1d3..85ff90f10189 100644
--- a/widget/gtk/WindowSurfaceWayland.cpp
+++ b/widget/gtk/WindowSurfaceWayland.cpp
@@ -73,20 +73,6 @@ ImageBuffer::~ImageBuffer()
     free(mBufferData);
 }
 
-void
-ImageBuffer::Dump(char *lokace)
-{
-  char tmp[500];
-  static int num = 0;
-  sprintf(tmp, "/home/komat/tmpmoz/check-%.3d-%s.png", num++, lokace);
-  cairo_surface_t *surface =
-    cairo_image_surface_create_for_data (mBufferData, CAIRO_FORMAT_ARGB32,
-                                         mWidth, mHeight,
-                                         mWidth * BUFFER_BPP);
-  cairo_surface_write_to_png(surface, tmp);
-  cairo_surface_destroy(surface);
-}
-
 already_AddRefed<gfx::DrawTarget>
 ImageBuffer::Lock(const LayoutDeviceIntRegion& aRegion)
 {
@@ -268,72 +254,6 @@ BackBufferWayland::CopyRectangle(ImageBuffer *aImage,
   }
 }
 
-// Update back buffer with image data from ImageBuffer
-void
-BackBufferWayland::UpdateRegion(ImageBuffer *aImage,
-                                const LayoutDeviceIntRegion& aInvalidRegion)
-{
-
-/*
-  gfx::IntRect bounds = aInvalidRegion.GetBounds().ToUnknownRect();
-  gfx::IntSize regionSize = bounds.Size();
-  assert(bounds.x + regionSize.width <= mWidth &&
-         bounds.y + regionSize.height <= mHeight);
-*/
-/*
-  for (int y = bounds.y; y < bounds.y + regionSize.height; y++) {
-    int start = (y * mWidth + bounds.x) * BUFFER_BPP;
-    int lenght = regionSize.width * BUFFER_BPP;
-    //memset((unsigned char *)mBufferData + start, c, lenght);
-    for (int i = 0; i < lenght; i+=4) {
-      ((unsigned char *)mBufferData + start)[i] = c;
-      ((unsigned char *)mBufferData + start)[i+1] = c;
-      ((unsigned char *)mBufferData + start)[i+2] = c;
-      ((unsigned char *)mBufferData + start)[i+3] = 0xff;
-    }
-  }
-*/
-  // Copy whole aImage to bounds.x, bounds.y, size.width, size.height
-/*
-  if (mWidth == size.width) {
-    // copy whole rows
-    int start = bounds.y * mWidth * BUFFER_BPP;
-    int lenght = size.height * mWidth * BUFFER_BPP;
-    memcpy((unsigned char *)mBufferData + start, aImage->GetData(), lenght);
-  } else {
-*/
-/*
-
-    Dump();
-*/
-/*
-    for (int y = bounds.y; y < bounds.y + regionSize.height; y++) {
-      int start = (y * mWidth + bounds.x) * BUFFER_BPP;
-      int lenght = regionSize.width * BUFFER_BPP;
-      memcpy((unsigned char *)mBufferData + start,
-              aImage->GetData() + ((y * aImage->mWidth) + bounds.x) * BUFFER_BPP,
-              lenght);
-    }
-*/
-//    Dump();
-//  }
-}
-
-void
-BackBufferWayland::Dump()
-{
-  char tmp[500];
-  static int num = 0;
-  sprintf(tmp, "/home/komat/tmpmoz/back-buffer-%.3d.png", num++);
-  cairo_surface_t *surface =
-    cairo_image_surface_create_for_data ((unsigned char *)mBufferData,
-                                         CAIRO_FORMAT_ARGB32,
-                                         mWidth, mHeight,
-                                         mWidth * BUFFER_BPP);
-  cairo_surface_write_to_png(surface, tmp);
-  cairo_surface_destroy(surface);
-}
-
 void
 BackBufferWayland::Attach(wl_surface* aSurface)
 {
diff --git a/widget/gtk/WindowSurfaceWayland.h b/widget/gtk/WindowSurfaceWayland.h
index f2bd78e9a38a..221a0619bf7e 100644
--- a/widget/gtk/WindowSurfaceWayland.h
+++ b/widget/gtk/WindowSurfaceWayland.h
@@ -24,8 +24,6 @@ public:
   already_AddRefed<gfx::DrawTarget> Lock(const LayoutDeviceIntRegion& aRegion);
   unsigned char* GetData() { return mBufferData; };
 
-  void Dump(char *lokace);
-
 private:
   unsigned char*     mBufferData;
   int                mBufferAllocated;
@@ -63,8 +61,6 @@ public:
     return aSize <= mAllocatedSize;
   }
 
-  void Dump();
-
 private:
   bool CreateShmPool(int aSize);
   bool ResizeShmPool(int aSize);
-- 
2.11.0

