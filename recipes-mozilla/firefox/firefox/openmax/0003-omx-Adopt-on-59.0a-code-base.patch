From 7d547c4ee8a50618cdc9ffa5cb85a66678b8fec6 Mon Sep 17 00:00:00 2001
From: Hiroshi Hatake <hatake@clear-code.com>
Date: Mon, 27 Nov 2017 15:06:57 +0900
Subject: [PATCH 3/4] omx: Adopt on 59.0a code base

Signed-off-by: Takuro Ashie <ashie@clear-code.com>
---
 dom/media/platforms/omx/OmxCoreLibLinker.cpp     | 10 +++++++---
 dom/media/platforms/omx/OmxDataDecoder.cpp       |  4 +---
 dom/media/platforms/omx/OmxDataDecoder.h         |  3 ++-
 dom/media/platforms/omx/OmxDecoderModule.cpp     |  2 --
 dom/media/platforms/omx/PureOmxPlatformLayer.cpp | 24 +++++++++++++++---------
 5 files changed, 25 insertions(+), 18 deletions(-)

diff --git a/dom/media/platforms/omx/OmxCoreLibLinker.cpp b/dom/media/platforms/omx/OmxCoreLibLinker.cpp
index 78f951f30f63..5fb3dd031db4 100644
--- a/dom/media/platforms/omx/OmxCoreLibLinker.cpp
+++ b/dom/media/platforms/omx/OmxCoreLibLinker.cpp
@@ -6,6 +6,7 @@
 
 #include "OmxCoreLibLinker.h"
 #include "mozilla/ArrayUtils.h"
+#include "mozilla/Preferences.h"
 #include "MainThreadUtils.h"
 #include "prlink.h"
 #include "PlatformDecoderModule.h"
@@ -68,9 +69,12 @@ OmxCoreLibLinker::Link()
 
   MOZ_ASSERT(NS_IsMainThread());
 
-  auto libPath = Preferences::GetCString("media.pdm-omx.core-lib-path");
-  if (!libPath.IsEmpty() && TryLinkingLibrary(libPath.Data()))
-    return true;
+  nsAutoCString libPath;
+  nsresult rv = Preferences::GetCString("media.pdm-omx.core-lib-path", libPath);
+  if (NS_SUCCEEDED(rv) && !libPath.IsEmpty()) {
+    if (TryLinkingLibrary(libPath.Data()))
+      return true;
+  }
 
   // try known paths
   for (size_t i = 0; i < ArrayLength(sLibNames); i++) {
diff --git a/dom/media/platforms/omx/OmxDataDecoder.cpp b/dom/media/platforms/omx/OmxDataDecoder.cpp
index 719ae5dd7864..f22a4b829b8c 100644
--- a/dom/media/platforms/omx/OmxDataDecoder.cpp
+++ b/dom/media/platforms/omx/OmxDataDecoder.cpp
@@ -101,10 +101,8 @@ protected:
 
 OmxDataDecoder::OmxDataDecoder(const TrackInfo& aTrackInfo,
                                TaskQueue* aTaskQueue,
-                               MediaDataDecoderCallback* aCallback,
                                layers::ImageContainer* aImageContainer)
-  : mMonitor("OmxDataDecoder")
-  , mOmxTaskQueue(CreateMediaDecodeTaskQueue())
+  : mOmxTaskQueue(CreateMediaDecodeTaskQueue("OmxDataDecoder"))
   , mReaderTaskQueue(aTaskQueue)
   , mImageContainer(aImageContainer)
   , mWatchManager(this, mOmxTaskQueue)
diff --git a/dom/media/platforms/omx/OmxDataDecoder.h b/dom/media/platforms/omx/OmxDataDecoder.h
index f3e65e8d3645..9bc480670e07 100644
--- a/dom/media/platforms/omx/OmxDataDecoder.h
+++ b/dom/media/platforms/omx/OmxDataDecoder.h
@@ -68,7 +68,6 @@ protected:
 public:
   OmxDataDecoder(const TrackInfo& aTrackInfo,
                  TaskQueue* aTaskQueue,
-                 MediaDataDecoderCallback* aCallback,
                  layers::ImageContainer* aImageContainer);
 
   RefPtr<InitPromise> Init() override;
@@ -162,6 +161,8 @@ protected:
   // The Omx TaskQueue.
   RefPtr<TaskQueue> mOmxTaskQueue;
 
+  RefPtr<TaskQueue> mReaderTaskQueue;
+
   RefPtr<layers::ImageContainer> mImageContainer;
 
   WatchManager<OmxDataDecoder> mWatchManager;
diff --git a/dom/media/platforms/omx/OmxDecoderModule.cpp b/dom/media/platforms/omx/OmxDecoderModule.cpp
index 8b014534082a..4fa0925b5e9a 100644
--- a/dom/media/platforms/omx/OmxDecoderModule.cpp
+++ b/dom/media/platforms/omx/OmxDecoderModule.cpp
@@ -40,7 +40,6 @@ OmxDecoderModule::CreateVideoDecoder(const CreateDecoderParams& aParams)
 {
   RefPtr<OmxDataDecoder> decoder = new OmxDataDecoder(aParams.mConfig,
                                                       aParams.mTaskQueue,
-                                                      aParams.mCallback,
                                                       aParams.mImageContainer);
   return decoder.forget();
 }
@@ -50,7 +49,6 @@ OmxDecoderModule::CreateAudioDecoder(const CreateDecoderParams& aParams)
 {
   RefPtr<OmxDataDecoder> decoder = new OmxDataDecoder(aParams.mConfig,
                                                       aParams.mTaskQueue,
-                                                      aParams.mCallback,
                                                       nullptr);
   return decoder.forget();
 }
diff --git a/dom/media/platforms/omx/PureOmxPlatformLayer.cpp b/dom/media/platforms/omx/PureOmxPlatformLayer.cpp
index 60950df5cb66..f4c23b4e5e60 100644
--- a/dom/media/platforms/omx/PureOmxPlatformLayer.cpp
+++ b/dom/media/platforms/omx/PureOmxPlatformLayer.cpp
@@ -284,9 +284,11 @@ PureOmxPlatformLayer::EventHandler(OMX_HANDLETYPE hComponent,
 {
   PureOmxPlatformLayer* self = static_cast<PureOmxPlatformLayer*>(pAppData);
   nsCOMPtr<nsIRunnable> r =
-    NS_NewRunnableFunction([self, eEventType, nData1, nData2, pEventData] () {
-      self->EventHandler(eEventType, nData1, nData2, pEventData);
-    });
+    NS_NewRunnableFunction(
+        "mozilla::PureOmxPlatformLayer::EventHandler",
+        [self, eEventType, nData1, nData2, pEventData] () {
+          self->EventHandler(eEventType, nData1, nData2, pEventData);
+        });
   self->mTaskQueue->Dispatch(r.forget());
   return OMX_ErrorNone;
 }
@@ -297,9 +299,11 @@ PureOmxPlatformLayer::EmptyBufferDone(OMX_HANDLETYPE hComponent,
                                       OMX_IN OMX_BUFFERHEADERTYPE* pBuffer)
 {
   PureOmxPlatformLayer* self = static_cast<PureOmxPlatformLayer*>(pAppData);
-  nsCOMPtr<nsIRunnable> r = NS_NewRunnableFunction([self, pBuffer] () {
-    self->EmptyBufferDone(pBuffer);
-  });
+  nsCOMPtr<nsIRunnable> r = NS_NewRunnableFunction(
+      "mozilla::PureOmxPlatformLayer::EmptyBufferDone",
+      [self, pBuffer] () {
+        self->EmptyBufferDone(pBuffer);
+      });
   self->mTaskQueue->Dispatch(r.forget());
   return OMX_ErrorNone;
 }
@@ -310,9 +314,11 @@ PureOmxPlatformLayer::FillBufferDone(OMX_OUT OMX_HANDLETYPE hComponent,
                                      OMX_OUT OMX_BUFFERHEADERTYPE* pBuffer)
 {
   PureOmxPlatformLayer* self = static_cast<PureOmxPlatformLayer*>(pAppData);
-  nsCOMPtr<nsIRunnable> r = NS_NewRunnableFunction([self, pBuffer] () {
-    self->FillBufferDone(pBuffer);
-  });
+  nsCOMPtr<nsIRunnable> r = NS_NewRunnableFunction(
+      "mozilla::PureOmxPlatformLayer::FillBufferDone",
+      [self, pBuffer] () {
+        self->FillBufferDone(pBuffer);
+      });
   self->mTaskQueue->Dispatch(r.forget());
   return OMX_ErrorNone;
 }
-- 
2.14.1

